<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.field.mapping.dao.master.FieldMappingMapper">
  <resultMap id="BaseResultMap" type="com.platform.field.mapping.entity.FieldMapping">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="FIELDID" jdbcType="CHAR" property="fieldid" />
    <result column="FIELD_CN" jdbcType="VARCHAR" property="fieldCn" />
    <result column="FIELD_EN" jdbcType="CHAR" property="fieldEn" />
    <result column="EVENTUALLY_UPDATE_PEOPLE" jdbcType="CHAR" property="eventuallyUpdatePeople" />
    <result column="CREATOR" jdbcType="CHAR" property="creator" />
    <result column="CREATECREATION_TIME" jdbcType="TIMESTAMP" property="createcreationTime" />
    <result column="EVENTUALLY_UPDATE_TIME" jdbcType="TIMESTAMP" property="eventuallyUpdateTime" />
    <result column="DELETE_FLAG" jdbcType="CHAR" property="deleteFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    FIELDID, FIELD_CN, FIELD_EN, EVENTUALLY_UPDATE_PEOPLE, CREATOR, CREATECREATION_TIME, 
    EVENTUALLY_UPDATE_TIME, DELETE_FLAG
  </sql>
  <select id="selectByExample" parameterType="com.platform.field.mapping.entity.FieldMappingExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tpl_field_mapping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.platform.field.mapping.entity.FieldMappingExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tpl_field_mapping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platform.field.mapping.entity.FieldMapping">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tpl_field_mapping (FIELDID, FIELD_CN, FIELD_EN, 
      EVENTUALLY_UPDATE_PEOPLE, CREATOR, CREATECREATION_TIME, 
      EVENTUALLY_UPDATE_TIME, DELETE_FLAG)
    values (#{fieldid,jdbcType=CHAR}, #{fieldCn,jdbcType=VARCHAR}, #{fieldEn,jdbcType=CHAR}, 
      #{eventuallyUpdatePeople,jdbcType=CHAR}, #{creator,jdbcType=CHAR}, #{createcreationTime,jdbcType=TIMESTAMP}, 
      #{eventuallyUpdateTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.platform.field.mapping.entity.FieldMapping">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tpl_field_mapping
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fieldid != null">
        FIELDID,
      </if>
      <if test="fieldCn != null">
        FIELD_CN,
      </if>
      <if test="fieldEn != null">
        FIELD_EN,
      </if>
      <if test="eventuallyUpdatePeople != null">
        EVENTUALLY_UPDATE_PEOPLE,
      </if>
      <if test="creator != null">
        CREATOR,
      </if>
      <if test="createcreationTime != null">
        CREATECREATION_TIME,
      </if>
      <if test="eventuallyUpdateTime != null">
        EVENTUALLY_UPDATE_TIME,
      </if>
      <if test="deleteFlag != null">
        DELETE_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fieldid != null">
        #{fieldid,jdbcType=CHAR},
      </if>
      <if test="fieldCn != null">
        #{fieldCn,jdbcType=VARCHAR},
      </if>
      <if test="fieldEn != null">
        #{fieldEn,jdbcType=CHAR},
      </if>
      <if test="eventuallyUpdatePeople != null">
        #{eventuallyUpdatePeople,jdbcType=CHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=CHAR},
      </if>
      <if test="createcreationTime != null">
        #{createcreationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventuallyUpdateTime != null">
        #{eventuallyUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platform.field.mapping.entity.FieldMappingExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tpl_field_mapping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tpl_field_mapping
    <set>
      <if test="record.fieldid != null">
        FIELDID = #{record.fieldid,jdbcType=CHAR},
      </if>
      <if test="record.fieldCn != null">
        FIELD_CN = #{record.fieldCn,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldEn != null">
        FIELD_EN = #{record.fieldEn,jdbcType=CHAR},
      </if>
      <if test="record.eventuallyUpdatePeople != null">
        EVENTUALLY_UPDATE_PEOPLE = #{record.eventuallyUpdatePeople,jdbcType=CHAR},
      </if>
      <if test="record.creator != null">
        CREATOR = #{record.creator,jdbcType=CHAR},
      </if>
      <if test="record.createcreationTime != null">
        CREATECREATION_TIME = #{record.createcreationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.eventuallyUpdateTime != null">
        EVENTUALLY_UPDATE_TIME = #{record.eventuallyUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null">
        DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tpl_field_mapping
    set FIELDID = #{record.fieldid,jdbcType=CHAR},
      FIELD_CN = #{record.fieldCn,jdbcType=VARCHAR},
      FIELD_EN = #{record.fieldEn,jdbcType=CHAR},
      EVENTUALLY_UPDATE_PEOPLE = #{record.eventuallyUpdatePeople,jdbcType=CHAR},
      CREATOR = #{record.creator,jdbcType=CHAR},
      CREATECREATION_TIME = #{record.createcreationTime,jdbcType=TIMESTAMP},
      EVENTUALLY_UPDATE_TIME = #{record.eventuallyUpdateTime,jdbcType=TIMESTAMP},
      DELETE_FLAG = #{record.deleteFlag,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="batchUpdateByPrimaryKeySelective" parameterType="com.platform.field.mapping.entity.FieldMapping">
    <foreach collection="list" item="item" separator=";">
    	update tpl_field_mapping
    	<set>
    		<if test="item.fieldid != null">
    			FIELDID = #{item.fieldid,jdbcType=CHAR},
    		</if>
    		<if test="item.fieldCn != null">
    			FIELD_CN = #{item.fieldCn,jdbcType=VARCHAR},
    		</if>
    		<if test="item.fieldEn != null">
    			FIELD_EN = #{item.fieldEn,jdbcType=CHAR},
    		</if>
    		<if test="item.eventuallyUpdatePeople != null">
    			EVENTUALLY_UPDATE_PEOPLE = #{item.eventuallyUpdatePeople,jdbcType=CHAR},
    		</if>
    		<if test="item.creator != null">
    			CREATOR = #{item.creator,jdbcType=CHAR},
    		</if>
    		<if test="item.createcreationTime != null">
    			CREATECREATION_TIME = #{item.createcreationTime,jdbcType=TIMESTAMP},
    		</if>
    		<if test="item.eventuallyUpdateTime != null">
    			EVENTUALLY_UPDATE_TIME = #{item.eventuallyUpdateTime,jdbcType=TIMESTAMP},
    		</if>
    		<if test="item.deleteFlag != null">
    			DELETE_FLAG = #{item.deleteFlag,jdbcType=CHAR},
    		</if>
    	</set>
    	<if test="_parameter != null">
    		<include refid="Update_By_Example_Where_Clause" />
    	</if>
    </foreach>
  </update>
  <select id="selectFieldByList" resultMap="BaseResultMap">
    select 
    	<if test="example neq null and example.distinct eq true">
    		distinct
    	</if>
    	'true' as QUERYID,
    	<include refid="Base_Column_List" />
     from tpl_field_mapping t 
    	<where>
    		1=1 
    		<if test="fieldName neq null and paramList neq null">
    			and (t.${fieldName} in 
    			<foreach collection="paramList" index="index" item="item">
    				<if test="index lt splitSize">
    					<if test="index % splitSize eq 0 and splitSize eq 1">
    						(#{item,jdbcType=VARCHAR})
    					</if>
    					<if test="index % splitSize eq 0 and index neq splitSize-1">
    						(#{item,jdbcType=VARCHAR},
    					</if>
    					<if test="index % splitSize neq 0 and index eq splitSize-1">
    						#{item,jdbcType=VARCHAR})
    					</if>
    					<if test="index % splitSize neq 0 and index neq splitSize-1">
    						#{item,jdbcType=VARCHAR},
    					</if>
    				</if>
    				<if test="index gte splitSize">
    					<if test="index lt (paramList.size - paramList.size % splitSize)">
    						<if test="index % splitSize eq 0 and index neq paramList.size-1">
    							or t.${fieldName} in (#{item,jdbcType=VARCHAR},
    						</if>
    						<if test="index % splitSize neq 0 and (index % splitSize eq splitSize-1)">
    							#{item,jdbcType=VARCHAR})
    						</if>
    						<if test="index % splitSize neq 0 and (index % splitSize lt splitSize-1)">
    							#{item,jdbcType=VARCHAR},
    						</if>
    					</if>
    					<if test="index gte (paramList.size - paramList.size % splitSize)">
    						<if test="paramList.size % splitSize eq 1">
    							or t.${fieldName} in (#{item,jdbcType=VARCHAR})
    						</if>
    						<if test="index % splitSize eq 0 and index neq paramList.size-1">
    							or t.${fieldName} in (#{item,jdbcType=VARCHAR},
    						</if>
    						<if test="(index % splitSize neq 0) and (index eq paramList.size-1)">
    							#{item,jdbcType=VARCHAR})
    						</if>
    						<if test="index % splitSize neq 0 and index neq paramList.size-1">
    							#{item,jdbcType=VARCHAR},
    						</if>
    					</if>
    				</if>
    			</foreach>)
    		</if>
    		<if test="example neq null and example.oredCriteria neq null">
    			and
    			<foreach collection="example.oredCriteria" item="criteria" separator="or">
    				<if test="criteria.valid">
    					<trim prefix="(" prefixOverrides="and" suffix=")">
    						<foreach collection="criteria.criteria" item="criterion">
    							<choose>
    								<when test="criterion.noValue">
    									and ${criterion.condition}
    								</when>
    								<when test="criterion.singleValue">
    									and ${criterion.condition} #{criterion.value}
    								</when>
    								<when test="criterion.betweenValue">
    									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
    								</when>
    								<when test="criterion.listValue">
    									and ${criterion.condition}
    									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
    										#{listItem}
    									</foreach>
    								</when>
    							</choose>
    						</foreach>
    					</trim>
    				</if>
    			</foreach>
    		</if>
    	</where>
    	<if test="example neq null and example.orderByClause neq null">
    		order by ${example.orderByClause}
    	</if>
  </select>
  <select id="bathcDeleteUpdateOrInsertByExample">
  
  
  
  
  </select>
</mapper>